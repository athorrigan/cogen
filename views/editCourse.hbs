<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Editing - {{courseTitle}}</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/themes/prism.min.css"/>
    <link rel="stylesheet" href="/css/jqtree.css">
    <link rel="stylesheet" href="/js/vendor/fineuploader/fine-uploader-new.css">
    <link rel="stylesheet" href="/css/editor-styles.css">

    <script src="/js/vendor/fineuploader/fine-uploader.js"></script>
    <script type="text/template" id="qq-template">
        <div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="Drop files here">
            <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">
                <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>
            </div>
            <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
                <span class="qq-upload-drop-area-text-selector"></span>
            </div>
            <div class="qq-upload-button-selector qq-upload-button">
                <div>Upload a file</div>
            </div>
            <span class="qq-drop-processing-selector qq-drop-processing">
                <span>Processing dropped files...</span>
                <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
            </span>
            <ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals">
                <li>
                    <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>
                    <div class="qq-progress-bar-container-selector qq-progress-bar-container">
                        <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>
                    </div>
                    <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                    <div class="qq-thumbnail-wrapper">
                        <img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale>
                    </div>
                    <button type="button" class="qq-upload-cancel-selector qq-upload-cancel">X</button>
                    <button type="button" class="qq-upload-retry-selector qq-upload-retry">
                        <span class="qq-btn qq-retry-icon" aria-label="Retry"></span>
                        Retry
                    </button>

                    <div class="qq-file-info">
                        <div class="qq-file-name">
                            <span class="qq-upload-file-selector qq-upload-file"></span>
                            <span class="qq-edit-filename-icon-selector qq-btn qq-edit-filename-icon" aria-label="Edit filename"></span>
                        </div>
                        <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                        <span class="qq-upload-size-selector qq-upload-size"></span>
                        <button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete">
                            <span class="qq-btn qq-delete-icon" aria-label="Delete"></span>
                        </button>
                        <button type="button" class="qq-btn qq-upload-pause-selector qq-upload-pause">
                            <span class="qq-btn qq-pause-icon" aria-label="Pause"></span>
                        </button>
                        <button type="button" class="qq-btn qq-upload-continue-selector qq-upload-continue">
                            <span class="qq-btn qq-continue-icon" aria-label="Continue"></span>
                        </button>
                    </div>
                </li>
            </ul>

            <dialog class="qq-alert-dialog-selector">
                <div class="qq-dialog-message-selector"></div>
                <div class="qq-dialog-buttons">
                    <button type="button" class="qq-cancel-button-selector">Close</button>
                </div>
            </dialog>

            <dialog class="qq-confirm-dialog-selector">
                <div class="qq-dialog-message-selector"></div>
                <div class="qq-dialog-buttons">
                    <button type="button" class="qq-cancel-button-selector">No</button>
                    <button type="button" class="qq-ok-button-selector">Yes</button>
                </div>
            </dialog>

            <dialog class="qq-prompt-dialog-selector">
                <div class="qq-dialog-message-selector"></div>
                <input type="text">
                <div class="qq-dialog-buttons">
                    <button type="button" class="qq-cancel-button-selector">Cancel</button>
                    <button type="button" class="qq-ok-button-selector">Ok</button>
                </div>
            </dialog>
        </div>
    </script>
</head>
<body class="edit-page">

<header class="header">
    <div class="header-bar container">
        <a href="http://ciscolive.com" class="header-bar__logo">
            <span class="icon-cisco"></span>
        </a>
        <div class="header-bar__main">
            <div class="header-heading">
                <h1 class="page-title">
                    <span id="courseNameDisplay">{{courseName}}</span>: <span id="courseSlugDisplay">{{courseSlug}}</span>
                </h1>
            </div>
        </div>
        <div>
            <a class="btn btn--icon"
               title="Course Variables"
               data-toggle="modal"
               data-target="#course_variables"
            >
                <span class="icon-info"></span>
            </a>
            <a class="btn btn--icon"
               title="Back to Profile Page"
               href="/profile/admin"
            >
                <span class="icon-back"></span>
            </a>
            <a class="btn btn--icon"
               title="Open course"
               target="_blank"
               href="/courses/{{courseTitle}}"
            >
                <span class="icon-link"></span>
            </a>
        </div>
    </div>
</header>

<div class="row course-data">
    <div class="row section-labels">
        <div class="section-label col-md-8">
            Course Details:
        </div>
        <div class="section-label col-md-3">
            Course Variables:
        </div>
    </div>
    <div class="col-md-8 panel panel-default">
        <div class="col-md-12">
            <div class="content">
                <form id="courseData">
                    <div class="row">
                        <div class="form-group col-md-4">
                            <div class="form-group__text">
                                <input type="text" id="courseTitle" name="courseTitle" class="form-control" />
                                <label for="courseTitle">Title:</label>
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <div class="form-group__text">
                                <input type="text" id="courseSlug" name="courseSlug" class="form-control" />
                                <label for="courseSlug">Slug:</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <div class="form-group__text">
                                <input type="text" id="courseName" name="courseName" class="form-control" />
                                <label for="courseName">Name:</label>
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <div class="form-group__text">
                                <input type="text" id="splashInstructions" name="splashInstructions" class="form-control" />
                                <label for="splashInstructions">Instructions:</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group full-title">
                            <div class="form-group__text">
                                <input type="text" id="fullTitle" name="fullTitle" class="form-control" />
                                <label for="fullTitle">Full Title:</label>
                            </div>
                        </div>
                    </div>
                    <div class="row save-button">
                        <div class="col-md-7 save-buffer">&nbsp;</div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-primary pull-right" onclick="saveCourseData(event)">Save</button>
                            </div>
                        <div class="col-md-6">&nbsp;</div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="variable-upload col-md-4 panel panel-default">
        <div class="col-md-12">
            <div class="content">
                <form id="courseVariables">
                    <div class="row">
                        <div class="form-group col-md-9">
                            <div id="fileUploader"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="uploadUpdate"></div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row leading-data">
    <ul class="nav nav-tabs" id="navTab" role="tablist">
        <li class="nav-item active">
            <a class="nav-link active" id="course-tab" data-toggle="tab" href="#course" role="tab" aria-controls="course" aria-selected="true">Course</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="buttons-tab" data-toggle="tab" href="#buttons" role="tab" aria-controls="buttons" aria-selected="false">Buttons</a>
        </li>
    </ul>
    <div class="col-md-12 panel panel-default">
        <div class="col-md-3">
            <div class="tab-content" id="navTabContent">
                <div class="tab-pane active" id="course" role="tabpanel" aria-labelledby="course-tab">
                    <div id="tree"></div>
                </div>
                <div class="tab-pane" id="buttons" role="tabpanel" aria-labelledby="buttons-tab">
                    <div id="buttonTree"></div>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="content">
                <div id="structureData">
                    <form id="nodeData">
                        <div class="row">
                            <div class="form-group col-md-4 col-md-offset-1">
                                <div class="form-group__text">
                                    <input type="text" id="title" name="title" class="form-control" />
                                    <label for="title">Title:</label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6 col-md-offset-1 section-variables">
                                <div class="row">
                                    <div class="form-group__text col-md-8">
                                        <input type="text" id="path" name="path" class="form-control" disabled />
                                        <label for="path">Path:</label>
                                    </div>
                                    <div class="col-md-4 inline-checkbox">
                                        <label class="form-check-label">
                                            <input class="form-check-input" type="checkbox" id="autopath" value="" checked> <span id="autopath-label">Automatic</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10 col-md-offset-1">
                                <textarea name="editor" id="editor" class="form-control">
                                </textarea>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-9">&nbsp;</div>
                                <div class="col-md-2">
                                    <button type="button" class="btn btn-primary pull-right" onclick="saveData(event, true)">Save</button>
                                </div>
                            <div class="col-md-2">&nbsp;</div>
                        </div>
                    </form>
                </div>
            </div>
            <div id="buttonData" class="hidden">
                <form id="buttonData">
                    <div class="row">
                        <div class="form-group col-md-4 col-md-offset-1">
                            <div class="form-group__text">
                                <input type="text" id="title" name="title" class="form-control" />
                                <label for="title">Title:</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6 col-md-offset-1 section-variables">
                            <div class="row">
                                <div class="form-group__text col-md-8">
                                    <input type="text" id="path" name="path" class="form-control" disabled />
                                    <label for="path">Path:</label>
                                </div>
                                <div class="col-md-4 inline-checkbox">
                                    <label class="form-check-label">
                                        <input class="form-check-input" type="checkbox" id="autopath" value="" checked> <span id="autopath-label">Automatic</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-10 col-md-offset-1">
                                <textarea name="buttonEditor" id="buttonEditor" class="form-control">
                                </textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-9">&nbsp;</div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary pull-right" onclick="saveData(event, true)">Save</button>
                        </div>
                        <div class="col-md-2">&nbsp;</div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<ul id="contextMenu" class="dropdown-menu">
    <li class="delete">
        <a href="#delete">
            <span class="icon-remove"></span>
            Delete
        </a>
    </li>
    <li class="divider"></li>
    <li class="add-before">
        <a href="#addBefore">
            <span class="icon-plus"></span>
            Add Sibling Before
        </a>
    </li>
    <li class="add-after">
        <a href="#addAfter">
            <span class="icon-plus"></span>
            Add Sibling After
        </a>
    </li>
    <li class="add-child">
        <a href="#addChild">
            <span class="icon-plus"></span>
            Add Child
        </a>
    </li>
</ul>

<ul id="buttonContextMenu" class="dropdown-menu">
    <li class="delete">
        <a href="#delete">
            <span class="icon-remove"></span>
            Delete
        </a>
    </li>
    <li class="divider"></li>
    <li class="add-before">
        <a href="#addBefore">
            <span class="icon-plus"></span>
            Add Sibling Before
        </a>
    </li>
    <li class="add-after">
        <a href="#addAfter">
            <span class="icon-plus"></span>
            Add Sibling After
        </a>
    </li>
</ul>


<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/components/prism-javascript.min.js"></script>
<script src="/js/js.cookie.js"></script>
<script src="/js/ckeditor/ckeditor.js"></script>
<script src="/js/tree.jquery.js"></script>
<script src="/js/jqTreeContextMenu.js"></script>
<script>

    // TODO: This needs better documentation.

    var
        $courseTree = $('#tree'),
        $buttonTree = $('#buttonTree'),
        $titleField = $('#title'),
        $pathField = $('#path'),
        $nodeData = $('#nodeData'),
        $autopathField = $('#autopath'),
        data = {},
        currentNodeId = 0,
        autopath = $autopathField.prop('checked')
    ;

    var saveData = function(e, edited) {
        var
            currentTitle = $titleField.val(),
            currentPath = $pathField.val(),
            currentData = CKEDITOR.instances['editor'].getData(),
            currentNode = $courseTree.tree('getNodeById', currentNodeId)
        ;

        if (edited) {
            // Prevent the default form submission.
            e.preventDefault();

            $courseTree.tree(
                'updateNode',
                currentNode,
                {
                    name: currentTitle,
                    path: currentPath,
                    data: currentData
                }
            );
        }

        data.courseData.children = JSON.parse($courseTree.tree('toJson'));

        $.post('/update-course', data)
            .fail(function(er) {
                console.log('Failed');
                console.log(er);
            })
        ;

    };

    var saveButtonData = function(e, edited) {
//        var
//                currentTitle = $titleField.val(),
//                currentPath = $pathField.val(),
//                currentData = CKEDITOR.instances['editor'].getData(),
//                currentNode = $courseTree.tree('getNodeById', currentNodeId)
//        ;
//
//        if (edited) {
//            // Prevent the default form submission.
//            e.preventDefault();
//
//            $courseTree.tree(
//                    'updateNode',
//                    currentNode,
//                    {
//                        name: currentTitle,
//                        path: currentPath,
//                        data: currentData
//                    }
//            );
//        }
//
//        data.courseData.children = JSON.parse($courseTree.tree('toJson'));
//
//        $.post('/update-course', data)
//                .fail(function(er) {
//                    console.log('Failed');
//                    console.log(er);
//                })
//        ;
        console.log('button data saved.');
    };

    var saveCourseData = function(e) {
        // Prevent the default form submission
        e.preventDefault();

        data.courseTitle = $('#courseTitle').val();
        data.courseSlug = $('#courseSlug').val();
        data.courseName = $('#courseName').val();
        data.splashInstructions = $('#splashInstructions').val();
        data.splashTitle = $('#fullTitle').val();

        $.post('/update-course', data)
            .done(function() {
                $('#courseNameDisplay').text(data.courseName);
                $('#courseSlugDisplay').text(data.courseSlug);
            })
            .fail(function(er) {
                console.log('Failed');
                console.log(er);
            })
        ;
    };

    var addNode = function($tree, parentNode, newNode) {
        $tree.tree('appendNode', newNode, parentNode);
    };

    var addNodeBefore = function($tree, siblingNode, newNode) {
        $tree.tree('addNodeBefore', newNode, siblingNode);
    };

    var addNodeAfter = function($tree, siblingNode, newNode) {
        $tree.tree('addNodeAfter', newNode, siblingNode);
    };

    var collapseTree = function(tree) {
        tree.iterate(function(node, level) {
            if (node.hasChildren()) {
                $courseTree.tree("closeNode", node, true);
            }
            return true;
        });
    };

    var expandTree = function(tree) {
        tree.iterate(function(node, level) {
            if (node.hasChildren()) {
                $courseTree.tree("openNode", node, true);
            }
            return true;
        });
    };

    $(function() {

        $autopathField.change(function() {
            if(this.checked) {
                $pathField.prop('disabled', true);
                autopath = true;
                $pathField.val($titleField.val().toLowerCase().replace(/[^A-za-z0-9_ ]|\^/g, '').replace(/\s+|_/g, '-'));
            }
            else {
                $pathField.prop('disabled', false);
                autopath = false;
            }
        });

        $titleField.keyup(function() {
            if (autopath === true) {
                $pathField.val($titleField.val().toLowerCase().replace(/[^A-za-z0-9_ ]|\^/g, '').replace(/\s+|_/g, '-'));
            }
        });

        $.getJSON('/get-course/{{courseTitle}}', function(courseInfo) {
            data = courseInfo;

            console.log(data);

            // Set the values of the course detail fields.
            $('#courseTitle').val(data.courseTitle);
            $('#courseSlug').val(data.courseSlug);
            $('#courseName').val(data.courseName);
            $('#splashInstructions').val(data.splashInstructions);
            $('#fullTitle').val(data.splashTitle);

            $courseTree.tree({
                data: data.courseData.children,
                dragAndDrop: true,
                autoOpen: false
            });

            $buttonTree.tree({
                data: data.courseData.buttons,
                dragAndDrop: true,
                autoOpen: false
            });

            // Collapse tree since the autoOpen parameter is currently broken and the tree is always expanded
            // by default.
            collapseTree($courseTree.tree('getTree'));

            var contextMenuApi = $courseTree.jqTreeContextMenu(
                $('#contextMenu'),
                {
                    delete: function(node) {
                        $courseTree.tree('removeNode', node);
                        saveData(false);
                    },
                    addBefore: function(node) {
                        var newId = Math.floor((Math.random() * 1000000000000) + 1);
                        addNodeBefore($courseTree, node, {
                            id: newId,
                            name: '[title]',
                            data: ''
                        });

                        var $newNode = $courseTree.tree('getNodeById', newId);
                        $courseTree.tree('selectNode', $newNode);
                    },
                    addAfter: function(node) {
                        var newId = Math.floor((Math.random() * 1000000000000) + 1);
                        addNodeAfter($courseTree, node, {
                            id: newId,
                            name: '[title]',
                            data: ''
                        });

                        var $newNode = $courseTree.tree('getNodeById', newId);
                        $courseTree.tree('selectNode', $newNode);
                    },
                    addChild: function(node) {
                        var newId = Math.floor((Math.random() * 1000000000000) + 1);
                        addNode($courseTree, node, {
                            id: newId,
                            name: '[title]',
                            data: ''
                        });

                        var $newNode = $courseTree.tree('getNodeById', newId);
                        $courseTree.tree('selectNode', $newNode);
                    }
                }
            );

            // Eventually should probably rerun this segment every time
            // there is a move or deletion.
            var rootNode = $courseTree.tree(
                'getNodeByCallback',
                function(node) {
                    // Refactor this to truly detect the first node
                    // Probably by list item selector and comparison.
                    if (node.getLevel() === 1) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            );

            var buttonContextMenu = $buttonTree.jqTreeContextMenu(
                $('#buttonContextMenu'),
                {
                    delete: function(node) {
                        $buttonTree.tree('removeNode', node);
                        saveButtonData(false);
                    },
                    addBefore: function(node) {
                        var newId = Math.floor((Math.random() * 1000000000000) + 1);
                        addNodeBefore($buttonTree, node, {
                            id: newId,
                            name: '[title]',
                            data: ''
                        });

                        var $newNode = $buttonTree.tree('getNodeById', newId);
                        $buttonTree.tree('selectNode', $newNode);
                    },
                    addAfter: function(node) {
                        var newId = Math.floor((Math.random() * 1000000000000) + 1);
                        addNodeAfter($buttonTree, node, {
                            id: newId,
                            name: '[title]',
                            data: ''
                        });

                        var $newNode = $buttonTree.tree('getNodeById', newId);
                        $buttonTree.tree('selectNode', $newNode);
                    }
                }
            );

            var buttonRoot = $buttonTree.tree(
                'getNodeByCallback',
                function(node) {
                    if (node.getLevel() === 1) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            );

            contextMenuApi.disable(rootNode.name, ['delete']);
            buttonContextMenu.disable(buttonRoot.name, ['delete']);

            $courseTree.on('tree.select', function(event) {
                if (event.node) {
                    var node = event.node;

                    currentNodeId = node.id;
                    $titleField.val(node.name);
                    $pathField.val(node.path);
                    CKEDITOR.instances['editor'].setData(node.data);
                    $nodeData.show();

                }
                else {
                    currentNodeId = 0;
                    $titleField.val('');
                    CKEDITOR.instances['editor'].setData('');
                    $nodeData.hide();
                }
            });

            $courseTree.on('tree.move', function(event) {
                // For whatever reason this needs to be fired manually
                // before the internal tree is ready to be saved.
                event.move_info.do_move();

                saveData(false);
            });
        });

        CKEDITOR.config.customConfig = 'config.js';
        CKEDITOR.config.uploadUrl = '/upload_photo';
        CKEDITOR.replace('editor');

        var editor = CKEDITOR.instances['editor'];

        editor.on('fileUploadResponse', function(event) {
            var
                    url = JSON.parse(event.data.fileLoader.xhr.responseText).url,
                    imgHtml = CKEDITOR.dom.element.createFromHtml('<img src="' + url + '"/>');
            ;

            editor.insertElement(imgHtml);
        });

        // Allow for the copying of the variable name when a user clicks on the appropriate variable in the popup.
        var clipboard = new Clipboard('ul.variables > li.list-group-item', {
            text: function(trigger) {
                return '\{\{' + trigger.innerHTML + '\}\}';
            }
        });

        clipboard.on('success', function(e) {
            var
                triggeredItem = e.trigger,
                originalText = triggeredItem.innerHTML
            ;

            triggeredItem.innerHTML = originalText + ' <span class="element-copied">:: copied ::</span>';

            // Need to use a closure to capture the original variables so that we can set them back in a timeout. 
            function restoreText () {
                return function() {
                    triggeredItem.innerHTML = originalText;
                };
            }

            setTimeout(restoreText(), 1000);
        });

        // Set up file uploader (fineuploader)
        var uploader = new qq.FineUploader({
            multiple: false,
            element: document.getElementById('fileUploader'),
            request: {
                endpoint: '/upload-file/{{courseTitle}}'
            },
            validation: {
                allowedExtensions: ['csv']
            },
            callbacks: {
                onComplete: function(id, name, responseJSON, xhr) {
                    var variableElementString = '';

                    $('#uploadUpdate').html('Variables updated.');

                    setTimeout(function() {
                        $('#uploadUpdate').html('');
                    }, 3000);

                    responseJSON.vars.sort().forEach(function(row) {
                        variableElementString += '<li class="list-group-item col-md-6">' + row + '</li> ';
                    });

                    $('ul.variables').html(variableElementString);
                }
            }
        });

        // Select the first node in our tree (and open the proper edit field in doing so.
        $courseTree.on('tree.init', function() {
            var
                $firstItem = $('.jqtree-tree li').first(),
                firstNode = $courseTree.tree('getNodeByHtmlElement', $firstItem[0])
            ;

            function selectFirstNode() {
                return function () {
                    $courseTree.tree('selectNode', firstNode);
                };
            }

            setTimeout(selectFirstNode(), 600);
        });
    });

</script>
<section id="modals">
    <div class="modal fade" id="course_variables" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button"
                            class="close"
                            data-dismiss="modal"
                            aria-label="Close"
                    >
                        <span>&times;</span>
                    </button>
                    <h3 class="modal-title">
                        Course Variables
                    </h3>
                </div>
                <div class="modal-body">
                    <div class="modal-image">
                        <div class="col-md-12">
                            <div class="panel-body">
                                <ul class="variables list-group col-md-12">
                                    {{#each courseVars}}
                                        <li class="list-group-item col-md-6">{{this}}</li>
                                    {{/each}}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-default dismiss"
                            data-dismiss="modal"
                    >
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>
</body>
</html>