const
    courseApi = require('../api/course_service'),
    process = require('process')
;

courseApi.createCourse(
    {
        "courseTitle": "CloudCenter",
        "courseSlug": "Deploying Cloud-Agnostic Applications with Cisco CloudCenter",
        "courseName": "LTRCLD-2303",
        "splashTitle": "Deploying Cloud-Agnostic Applications with Cisco CloudCenter",
        "splashInstructions": "Please select a Student ID from the dropdown above to Continue:",
        "userNomenclature": "Student",
        "coursePath": "cloudcenter",
        "children": [
            {
                "name": "Welcome",
                "id": "735186179213",
                "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Welcome to LTRCLD-2303</h1><p>This session will provide attendees with operational knowledge of Cisco CloudCenter (formerly CliQr). CloudCenter allows users to define cloud-agnostic blueprints of their applications and then deploy them to private, public, or hybrid clouds. This lab hopes to enable students to understand and become proficient users of the CloudCenter solution.</p><h2>Objectives</h2><p>Following a brief presentation, students will learn how a cloud-agnostic, 3-tiered application, can be modeled in CloudCenter. They will then deploy that application to multiple private clouds, as well as to a public cloud (AWS). Additionally, students will migrate one of the private cloud deployments into a public cloud, utilizing CloudCenter&#39;s ability to facilitate data migration. Users will be given the opportunity to accomplish several objectives utilizing real hardware (not virtualized).</p><p>The first part of this session will be an overview of the CloudCenter solution given by our Technical Marketing Engineer from the CloudCenter business unit. The presentation will provide a brief insight into the product and will give students some background on the past, present and future of CloudCenter. The final portion of the presentation will cover the lab environment, with an in-depth review of the setup and a look at the pre-configured portions of the environment.</p><p>Our key messages for the Instructor-Led Training are as follows:</p><ul><li>CloudCenter helps customers avoid vendor lock-in by creating cloud-agnostic application blueprints that can be deployed or migrated to private, colo, or public clouds.</li><li>CloudCenter provides &quot;Single Pane of Glass&quot; management for clouds (public/private), applications and users, with governance polices that provide centralized visibility and control of the environment, helping customers mitigate the pitfalls and risks of &quot;Shadow IT&quot;.</li><li>CloudCenter is a complementary addition to private and public cloud solutions and can play an integral part in managing the full lifecycle of an application. With new features like the Actions Library and Capacity Management, CloudCenter plays an important role even after an application has been deployed.</li></ul><p>&nbsp;</p><p class=\"text-center\"><img src=\"/uploads/6fc123c8-5524-4b3e-1e47-4fd2fd2b4bef.png\" /></p>",
                "path": "welcome"
            },
            {
                "name": "Topology Information",
                "id": "886789822047",
                "data": "<h1>Topology Information</h1><p><img src=\"/uploads/d0e30dad-a076-e093-08ef-bcadbf0fec2d.png\" /></p>",
                "path": "topology-information"
            },
            {
                "name": "Connection Information",
                "id": "529770543839",
                "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><title></title><h1>Connection Information</h1><p>The management subnets for this lab are <strong>10.1.200.x/24</strong> (CCM, vCenter, APIC) and <strong>10.1.202.x/24</strong> (OpenStack). In the upper-right hand corner of the browser, students can click on the small, round icon with bi-directional arrows to display an overlay with following IP addressing.</p><h2>Infrastructure Addresses</h2><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Browser Tab</th><th>Device</th><th>IP Address</th><th>Credentials</th></tr><tr><th>1</th><td><a href=\"http://10.1.200.125\">CiscoLive-CCM</a></td><td>10.1.200.125</td><td>{{student-name}}@ciscolive.com/cisco.123/{{student-abbrv}}-SubTenant</td></tr><tr><th>2</th><td><a href=\"http://10.1.200.152\">APIC</a></td><td>10.1.200.152</td><td>{{student-name}}/cisco.123</td></tr><tr><th>3</th><td><a href=\"http://10.1.200.31\">ACI vCenter</a></td><td>10.1.200.31</td><td>student/cisco.123</td></tr><tr><th>4</th><td><a href=\"http://10.1.202.180\">OpenStack Horizon</a></td><td>10.1.202.180</td><td>{{student-name}}/cisco.123</td></tr></tbody></table></div><div class=\"note\">Before proceeding, students should ensure they have 2 browser windows open. The first window should be used for the lab guide, while the second window should be used to display each device&#39;s management interface. If necessary, please use the following hyperlinks to open additional tabs (right-click). Ideally, the tabs order should match the <strong>Tab Number</strong> below as they are often used for reference.</div><h2>Accessing the Management Interfaces</h2><p>The following sections will instruct users on how to sign into each management interface. <strong>Please ensure you are using the correct student information! </strong>Where applicable, the following screenshots are using our example student.</p><h3>Accessing the CCM GUI</h3><p><span class=\"step\">STEP 1:</span> Navigate to <strong>10.1.200.125</strong> or click on the tab <strong>(1)</strong> for the CCM.</p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Field</th><th>Input</th></tr><tr><td>Email</td><td>{{student-name}}@ciscolive.com</td></tr><tr><td>Password</td><td>cisco.123</td></tr><tr><td>Tenant ID</td><td>s{{number}}-SubTenant</td></tr></tbody></table></div><h2><img src=\"/uploads/059f67c5-492e-9d73-063c-acab3e7e47dc.png\" /></h2><h3>Accessing the APIC GUI</h3><p><span class=\"step\">STEP 2:</span> Navigate to <strong>10.1.200.152</strong> or click on the tab <strong>(2)</strong> for the APIC.</p><p><img src=\"/uploads/19bf309b-5aa0-9ec2-15d3-3347bd7deae1.png\" /></p><h2>Accessing the vCenter GUI</h2><p><span class=\"step\">STEP 3:</span> Navigate to <strong>10.1.200.31</strong> or click on the tab <strong>(3)</strong> for vCenter.</p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Field</th><th>Input</th></tr><tr><td>User name</td><td>student</td></tr><tr><td>Password</td><td>cisco.123</td></tr></tbody></table><p><img src=\"/uploads/dc2d43e0-1ecd-61c7-98fd-b293edbd8b4c.png\" /></p><p><img src=\"/uploads/11836d58-1072-d8e8-3e29-57c2bdbfeb03.png\" /></p><h3>Accessing the OpenStack Horizon GUI</h3><p><span class=\"step\">STEP 4:</span> Navigate to <strong>10.1.202.180</strong> or click on the tab <strong>(4)</strong> for the Horizon dashboard.</p></div><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Field</th><th>Input</th></tr><tr><td>User Name</td><td>{{student-name}}</td></tr><tr><td>Password</td><td>cisco.123</td></tr></tbody></table><p>&nbsp;</p><p><img src=\"/uploads/8f6fd623-98c8-71eb-486a-0d44458105cb.png\" /></p></div>",
                "path": "connection-information"
            },
            {
                "name": "Introduction to the CCM",
                "id": "57830934074",
                "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Introduction to the CCM</h1><p>The GUI for Cisco CloudCenter Manager is equally powerful as it is easy to navigate and understand. It features a clean UI with well-organized menus that enhance CloudCenter&#39;s flexibility and strengths, such as multi-tenancy, governance, and application deployment.</p><p>By default, the CCM has one admin user and tenant from which the rest of the tenants and users can be created. This tenant is called the <strong>Root-Tenant. </strong>For the purposes of this lab, each student has been made the Administrator of their own <b>Student Sub-Tenant</b>. Sub-Tenants belong to the Root-Tenant, meaning their policies, application profiles and cloud environments are shared and controlled by their parent.</p><h2>Exploring the CCM GUI</h2><p>Once the GUI is loaded, you will be greeted by the system dashboard. The system dashboard provides the user with a bird&#39;s eye view of their cloud environments, including information such as Active VMs, incurred costs and deployment information. Because this is a new Sub-Tenant, it is expected for the dashboard to be mostly blank. There will be no Running VMs and both the Run Time and the Costs will be zeroed.</p><p>In most cases, the GUI consists of two parts the side menu panel (hover-over to expand) and the main display panel. Navigation is done on the left, while policies and data are displayed in the main panel; most configuration will either be in the main panel, or in a pop-up window inside the main panel.</p><p><span class=\"step\">STEP 1:</span> Hover over the left-hand menu to open the side-panel drawer. For the purposes of this lab, we will be mostly focused on the highlighted areas.</p><p><img src=\"/uploads/ed6871e5-0459-8913-5757-698bb813e767.png\" /></p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Name</th><th>Description</th></tr><tr><td>App Profiles</td><td>This is where Application Profiles are modeled (edited), shared and imported/exported. This is also once place where Application Profiles can be deployed.</td></tr><tr><td>Deployments</td><td>This is where currently deployed and terminated applications are displayed. From here, users can view further details about a deployed application by click on the Job-Name.</td></tr><tr><td>Virtual Machines</td><td>This is where the virtual machines, for each of the currently deployed applications, are displayed. From here, users can view further details about each specific VM, as well as use the Actions Library to make post-deployment configurations.</td></tr><tr><td>Environments</td><td>This is where deployment environments are created and edited. Deployment Environments are the mapping logic between various cloud environments and their accounts.</td></tr><tr><td>Actions Library</td><td>This framework allows administrators to define actions and execute them on different CloudCenter resources such a VMs, Deployments, or Application profiles. Association criteria defined as part of an action dictates which action is available for execution against which specific resource.</td></tr><tr><td>Admin</td><td>This section contains the various administrative policies of the tenant. This includes Clouds, Users and Permissions, tenants, tags, reports and governance.</td></tr></tbody></table></div>",
                "path": "introduction-to-the-ccm"
            },
            {
                "name": "Creating and Managing Clouds",
                "id": "893619470870",
                "data": "",
                "path": "creating-and-managing-clouds",
                "children": [
                    {
                        "name": "Clouds",
                        "id": "510220322755",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><div class=\"note\">Due to various limitations and time considerations, it was necessary for several items to be pre-configured for participants. The following section will review some of those configurations, and explain there overall importance to the CloudCenter product solution. <strong>Please only attempt to configure policies when instructed.</strong></div><h1>Clouds</h1><p>Creating and configuring <b>Clouds</b> is likely the most important part of setting up CloudCenter.</p><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>Admin &gt; Clouds.</strong></p><p>Clouds are added and managed in the CCM. Clouds can be configured by both the CCM admin and the Sub-Tenant Owner. Each Cloud requires at least one <strong>Cloud Account</strong>. However, due to the shared infrastructure, the Cloud Accounts for ACI and AWS have been pre-configured and shared with the student Sub-Tenant.</p><p><img src=\"/uploads/2a74c882-14a4-3e27-f213-499dc591a46a.png\" /></p><p>According to CloudCenter, clouds are broken into 2 categories - <b>Public</b> and <b>Private Clouds</b> (which are often just &quot;on-prem&quot; data centers). Regardless of the cloud type, each target Cloud Region or data center requires their own CloudCenter Orchestrator (CCO) and RabbitMQ (AMQP) pair. In this lab, the clouds have been created for each student. By default, each student has access to an ACI cloud, an OpenStack cloud, and an AWS cloud.</p><div class=\"note\">In CloudCenter, ACI clouds are actually categorized as <strong>VMware Private Cloud</strong>. This is because vCenter is the virtualization platform while ACI is the network. However, CloudCenter does provide the ability to configure ACI constructs and utilize the many features provided by VMM Integration. This will be covered in the section on <b>Extensions.</b></div><p><img src=\"/uploads/f3944929-c864-707e-1817-d514ddf35fa5.png\" /></p>",
                        "path": "clouds"
                    },
                    {
                        "name": "Cloud Accounts",
                        "id": "806607548624",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Cloud Accounts</h1><p><b>Cloud Accounts</b> contain connection information and credentials for each cloud. Depending on the type of cloud selected, the Cloud Account will require different items, such as usernames, passwords, management addresses and resource information. For example, a Cloud Account for VMware or ACI requests the information for reaching and logging into vCenter.</p><p><img src=\"/uploads/3b41bbc0-cab2-1a17-b988-d89d864518e3.png\" /></p><p>In this lab, the Cloud Accounts for ACI and AWS have been created for students. However, students will need to create their own Cloud Account for OpenStack before proceeding.</p><p><span class=\"step\">STEP 1:</span> If necessary, navigate back to the Clouds page by click on <strong>Admin &gt; Clouds</strong> in the left-hand menu. When the page loads, click on <strong>CiscoLive_OS</strong> and note the message: <em>No cloud account created</em>. Select <strong>Configure Cloud.</strong></p><p><img src=\"/uploads/c445220c-d54f-e04b-6e2b-ae8d251ea2b3.png\" /></p><p><span class=\"step\">STEP 2:</span> When the page loads, click on <strong>Add Cloud Account</strong> to open the Add Cloud Account wizard. Using the information below, complete the wizard as shown. Click <strong>Save</strong> to complete the setup and wait for the message indicating a successfully creation.</p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Field</th><th>Input</th></tr><tr><td>Name</td><td>{{student-abbrv}}_OS_CloudAccount</td></tr><tr><td>OpenStack Username</td><td>{{student-name}}</td></tr><tr><td>OpenStack Account Password</td><td>cisco.123</td></tr></tbody></table><p><img src=\"/uploads/b76564c6-f13c-f0c8-3a1b-ce5a4c713d99.png\" /></p><p><img src=\"/uploads/9d0f2312-3a51-6702-9cc2-f4004823c74c.png\" /></p></div>",
                        "path": "cloud-accounts"
                    },
                    {
                        "name": "Cloud Regions",
                        "id": "281405613354",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Cloud Regions</h1><p>In the traditional sense, <b>Cloud Regions</b> map to geographical locations. For example, in the case of AWS, a Cloud Region may reference <b>us-east-1,</b> which is Amazon&#39;s data center in Northern Virginia.</p><p>In a private data center however, Cloud Regions can map to many different things. In some cases, the Region could be the data center&#39;s physical location, the set of racks hosting the cloud&#39;s servers, or reference the users utilizing the Cloud Region (i.e. Dev vs Ops) it is entirely up to the admin!</p><p>In either case, the Cloud Region is tied to an Orchestrator. For each Region, there are 4 main things that need to be configured - <b>Cloud Settings</b>, <b>Orchestrater Configuration</b>, <b>Instance Types </b>and<b> Image Mappings</b>.</p><p>Because the Orchestrators are considered a shared resource, the Regions have been created for you. We are unable to provide view access into the Cloud Regions without allowing configuration changes. Instead, please reference the following screenshots to learn more about the Cloud Region configuration.</p><p>&nbsp;</p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Number</th><th>Name</th><th>Description</th></tr><tr><td>1</td><td>Cloud Settings</td><td>Enables the configuration of additional cloud specific settings, such as Instance Naming Strategies and Region and Keystone Mapping in OpenStack.</td></tr><tr><td>2</td><td>Orchestrator Configuration</td><td>Associates the Cloud Region, and the CCM, with the right Orchestrator and RabbitMQ VMs.</td></tr><tr><td>3</td><td>Instance Types</td><td>Each Instance Type offers different compute, memory, and storage capabilities. Instance Types give you the flexibility to choose the appropriate mix of resources for your applications. For some cloud offerings, particularly public clouds and OpenStack, these instance types can be synced and dynamically updated.</td></tr><tr><td>4</td><td>Image Mappings</td><td>Each logical image is mapped to a corresponding <a href=\"https://editor-docs.cloudcenter.cisco.com/display/CCD482/Base+OS+Images\">base image</a> for each cloud; these mappings are made on a per-cloud basis. The platform or tenant administrator references these logical images and makes them available to permitted users. These are often referred to as the <b>Worker VMs.</b></td></tr></tbody></table></div><h3>CiscoLive_ACI Region01</h3><p><img src=\"/uploads/81ba4e25-b1e7-891e-529d-44422eb513c4.png\" /></p><h3>CiscoLive_OS Region01</h3><p><img src=\"/uploads/118de9a3-5b9c-4b58-74dc-1361d71d7e1c.png\" /></p>",
                        "path": "cloud-regions"
                    },
                    {
                        "name": "Extensions",
                        "id": "911399495451",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><p>Introduced in Cisco CloudCenter 4.6, <b>Extensions</b> enable greater control and deeper integration between CloudCenter and Cisco&#39;s Application Centric Infrastructure (ACI). Creating an Extension will extend the capabilities of the CCO to provision networks in an ACI environment, allowing users to configure CloudCenter resources for both the Deployment Environment and the Application Profile. Extensions also determine how the CCO reaches and configures the APIC. Once the extension is configured, the CCM will have visibility into both the APIC and vCenter.</p><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>Admin &gt; Extensions. </strong>When the panel refreshes, click on <strong>Add Extension.</strong></p><p><img src=\"/uploads/eabf52ba-b3e5-8811-fbfb-a974d086b401.png\" /></p><p><span class=\"step\">STEP 2:</span> Once the main panel refreshes, complete the wizard with the information in the following table. Click <strong>Connect</strong> to complete the configuration. If the configuration is successful, the following message will be displayed: <em>APIC Controller connected successfully! You may continue to provide further placement information. </em>Click <strong>SAVE</strong> to continue.</p><p>&nbsp;</p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Field</th><th>Input</th></tr><tr><td>Name</td><td>{{student-abbrv}}APICext</td></tr><tr><td>APIC Controller URL</td><td>http://10.1.200.152</td></tr><tr><td>username</td><td>{{student-name}}</td></tr><tr><td>password</td><td>cisco.123</td></tr></tbody></table><p><img src=\"/uploads/7e584f56-485e-9ce8-48f2-c0825f6c39ec.png\" /></p><p>The main panel will refresh and show an additional option for configuring <b>Bridge Domain Templates. </b>These templates can be used to expedite and standardize Bridge Domains created by CloudCenter; they can also determine and configure the VRF.</p><p>When integrating with ACI, administrators have several different options and approaches available for application deployments.</p><p>Users can select from pre-existing constructs in ACI, using the ACI Extension to poll the APIC and retrieve any existing configurations, such as VRFs, Bridge Domains, L3Outs, EPGs, etc. Users can also create new constructs by using Bridge Domain Templates. Lastly, users can use a combination of these options to create a custom workflow that suits their individual needs.</p><p>In our lab, the Bridge Domain, VRF and L3Out has already been created for each student. We will be instructing our deployments to use existing objects. For this reason, please see the following screenshot for an <strong>example</strong> of the Bridge Domain Template Wizard.</p><h3>Bridge Domain Templates</h3><p><img src=\"/uploads/d388136a-fc81-3d48-6f49-f28d575045b6.png\" /></p><img src=\"/uploads/9b5c05d8-5ff3-633a-e970-40727f66d5a1.png\" /></div>",
                        "path": "extensions"
                    },
                    {
                        "name": "Repositories",
                        "id": "431907383360",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Repositories</h1><p>Typically, enterprises maintain application packages, data, and scripts in multiple repositories of their choice -- CloudCenter refers to this as an Artifact Repository. Use the Artifact Repository to attach your own external repository to store and access your files. CloudCenter provides a <b>Repositories</b> tab in the CCM UI for this purpose.</p><p>Use the Artifact Repository to point to application binaries, scripts, and shared files as well as View and maintain the list of external repositories and point to the repository name in application profiles by providing a relative path. Enterprises may decide to make the artifact repository (or multiple artifact repositories) specific to a user, a tenant, a cloud, or any combination of these resources based on their respective deployment requirement.</p><p>CloudCenter users can define their own repositories and store the required application binaries, scripts, and shared files in the Artifact Repository. At deployment time, you can download (or upload for supported write operations) the required file from this repository.</p><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>MAIN MENU &gt;&nbsp;More &gt; Repositories</strong> to see the pre-configured repositories for this lab. The <b>SVS-RTP-Repo</b> is being hosted locally while the <b>CliqrDemoRepo</b> is being hosted in AWS. These repositories were created and then shared by the Root-Admin.</p><p><img src=\"/uploads/a9f1d065-1aaf-bbe6-69be-eb97d7f7e3d2.png\" /></p>",
                        "path": "repositories"
                    }
                ]
            },
            {
                "name": "Governance ",
                "id": "686161481281",
                "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Governance</h1><p>CloudCenter provides powerful administration and <b>Governance</b> capabilities for datacenter, private cloud, and public cloud environments. Rules-based governance lets you configure various automatic actions that the system takes based on system tags and system tag matching rules.</p><p><b>System Tags</b> are labels that consist of a name and an optional description. You can associate system tags with application profiles and application deployments, either at each individual application tier or globally for the entire application blueprint. You also can use system tags to add system tag matching rules to Aging Policies, Scaling Policies, Security Profiles, and Deployment Environments. If rules-based governance is enabled, the system takes various automatic actions based on the tags that are associated with resources and the system tag matching rules that are added.</p><p>In this lab, there are three System Tags: <strong>Private, Public, Scaling. </strong>The first two tags will be used to control and determine Deployment Environments, while the Scaling tag will associate a Scaling Policy to application tiers in WordPress. Some of these policies and objects will be covered later in the lab.</p><div class=\"important-note\">Once Governance Mode is enabled, only a tenant admin can create policies, associate the policy to tags and make it available to users. Users cannot create new policies or view existing policies. Promoted admins can only see their own resource instead of the tenant resources.</div><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>Admin &gt; Governance Rules. </strong>The first step is (1-2) toggle on Governance, and to (3) reload the browser page when prompted.</p><p><img src=\"/uploads/0e11acd1-6c0e-1959-e325-52c11f62a359.png\" /></p><div class=\"note\">Once System Tags are added to objects and policies, this page will display the various relationships and associations.</div><p><span class=\"step\">STEP 2:</span> In the left-hand menu, click on <strong>System Tags.</strong> These System Tags were created and shared by the Root-Tenant. Because tags do not stay associated to objects and policies when they are shared, students need to re-associate these tags as necessary. This will be completed as student progress through the lab. The <strong>Private/Public </strong>System Tags will be used to force application deployments to specific Deployment Environments, while the <strong>Scaling</strong> System Tag will be used to associate application tiers with a CPU Scaling Policy.</p><p><img src=\"/uploads/179c8329-aa16-65cd-51cd-9a4be4d9a3aa.png\" /></p>",
                "path": "governance-"
            },
            {
                "name": "Policies",
                "id": "286700570873",
                "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Policies</h1><p>Policies cause the CloudCenter platform to perform configured activities when certain events or conditions occur. For example, a policy could cause the CloudCenter platform to scale an application tier when certain resource thresholds are met. In this lab, students will be working with the following policies:</p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Name</th><th>Description</th></tr><tr><td>Scaling Policy</td><td>Causes the CloudCenter platform to increase or decrease VM resources for each application deployment tier that is associated with the policy when one or more designated conditions occur.</td></tr><tr><td>Aging Policy</td><td>Causes the CloudCenter platform to suspend and optionally terminate each application deployment that is associated with the policy after the deployment has been running for a designated period of time term.</td></tr></tbody></table><div class=\"important-note\">Do not edit or add policies - doing so may result in failed deployments.</div><h2>Scaling Policy</h2><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>More &gt; Policies. </strong>When the main panel refreshes, click on <strong>Scaling Policies</strong> in the right-hand corner.</p><p><img src=\"/uploads/6d614b48-472f-a0be-8901-a1fc3b5b71dd.png\" /></p><p>The only Scaling Policy available is <strong>CPU-ScalingPolicy. </strong>It was created and shared by the Root-Tenant.<strong> </strong>This policy, as the name implies, will automatically scale out and scale down application tiers when CPU utilization reaches certain thresholds. Virtual Machines are polled every 30 seconds; when CPU utilization is above 40%, CloudCenter will start to create and spin-up another VM. If the policy executes, it will not execute again during the Breach Period.&nbsp;The breach&nbsp;period refers to the period of time that the CloudCenter platform waits after one scale up or scale down action, before stabilizing the load. After 10 minutes, if CPU falls below 20%, the tier will automatically scale back. The screenshot below outlines the attributes of the Scaling Policy.</p><p><img src=\"/uploads/3414a38f-aa0f-e672-da20-0dfc83a74b70.png\" />In this lab, the Apache tier of the WordPress application profile is pre-tagged with a System Tag labeled <strong>Scaling</strong>. Once the same tag is applied to CPU-ScalingPolicy, any deployments of WordPress will have the ability to scale their Apache tiers automatically.</p><p><span class=\"step\">STEP 2:</span> Click on the small grey luggage-tag icon to associate a System Tag to the policy. When the pop-up appears, select <strong>Scaling</strong> and then click <b>add </b>and <strong>Close</strong> to save the tag association.</p><p><img src=\"/uploads/2fafe112-d8e5-46f0-a529-20b012c614b5.png\" /></p><h2>Aging Policy</h2><p>The other policy type used in this lab are <strong>Aging Policies. </strong>These policies manage how long applications are allowed to stay active. Once the prescribed time limit is reached, CloudCenter will suspend any associated virtual machines. In addition, the policy can also terminate and completely remove deployments from CloudCenter.</p><p>There are two Aging Policies used in this lab, <strong>4hr-AgingPolicy</strong> and <strong>2hr-AgingPolicy.</strong> The 4hr-AgingPolicy will be used for Private Deployment Environments, while the 2hr-AgingPolicy will be used for the Public Deployment Environment (AWS). For the case of this lab, the Aging Policies will ensure a) the lab environment is &quot;self-cleaning&quot; and b) we do not incur too many real-world costs while using AWS.</p><p>In order to ensure these policies are always used in the correct circumstances, students will once again use System Tags. However, unlike the Scaling Policy where the tag is being used to associate the policy to the application profile, these tags will be used to associate the appropriate Aging Policy with the correct Deployment Environment.</p><p><span class=\"step\">STEP 3:</span> In right-hand corner, click on <strong>Aging Policies. </strong>When the main panel refreshes, click on the small grey luggage-tag next to 4hr-AgingPolicy. In the pop-up window, select <strong>Private </strong>before clicking <strong>add</strong> and then <strong>Close </strong>to save the changes.</p><p><img src=\"/uploads/9a79b709-44e0-b103-fd9e-514bb5553776.png\" /></p><p><span class=\"step\">STEP 4:</span> Repeat the same steps for 2hr-AgingPolicy. However, instead of selecting Private, students should chose the <strong>Public </strong>System Tag. <img src=\"/uploads/e3182b59-ba55-4577-463d-153ec370790a.png\" /></p></div>",
                "path": "policies"
            },
            {
                "name": "Deployment Environments",
                "id": "845936949924",
                "data": "",
                "path": "deployment-environments",
                "children": [
                    {
                        "name": "Overview of Deployment Environments",
                        "id": "859094444236",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Overview of Deployment Environments</h1><p>As the name suggests, <strong>Deployment </strong><b>Environments</b> are responsible for associating Cloud Regions with Cloud Accounts based on the deployment needs of the organization or Cloud Owners. Because Clouds can have one to many Regions and one to many Accounts, there needs to be a construct that maps these objects together. Environments can be shared with multiple users and Sub-Tenants.</p><p>For example, in an ACI environment, one fabric could host many different tenants. Each tenant could be treated as an individual Cloud, with separate CCOs and Rabbit VMs. This would require each tenant to have a separate Cloud Account and Region - similar to this lab - and a Deployment Environment to associate them together.</p><p>For another example, consider environments that may have multiple clouds for different purposes, such as Development and Production. <b>Development Deployment Environment </b>could be associated with a development cloud and a <b>Production Deployment Environment</b> could be associated with a production grade, high-performance cloud. Users on a development team would have the ability to deploy only to the Development environment and users on an operations team would have the ability to deploy only to the Production environment.</p><p>In addition to selecting the Cloud Account and Region, each Deployment Environment has a list of &quot;defaults&quot; that can be defined. These default values can be set for instance types, cloud accounts, network settings, etc.&nbsp;The set defaults will be populated and used whenever that particular deployment environment is selected.</p><p>For the purposes of this lab, students are going to utilize two Deployment Environments - <strong>Public </strong>and <strong>Private</strong>. The Public Deployment Environment will be for AWS, while the Private Deployment Environment will be used for ACI and OpenStack. Students will then use System Tags to ensure these environments adhere to the governance model.</p>",
                        "path": "overview-of-deployment-environments"
                    },
                    {
                        "name": "Viewing the Public-DeploymentEnv",
                        "id": "406814498462",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Viewing the Public-DeploymentEnv</h1><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on<strong> Environments. </strong>If you do not see Environments, click on <strong> &gt; Main Menu</strong> to navigate back to the Main Menu of the left-hand menu.</p><p>As previously mentioned, the environment for AWS, Public-DeploymentEnv, has been pre-configured and shared with each Sub-Tenant. <strong>Please do not edit Public-DeploymentEnv. </strong> Changes may result in failed application deployments.</p><p>The screenshots below are from Public-DeploymentEnv. The first screenshot shows the association of the <strong>SVS_AWS_CloudAccount </strong>with the <strong>SVS_AWS Region, </strong>US East (Virginia). The second screenshot shows the <strong>Default Cloud Settings. </strong>Default Cloud Settings vary between cloud types, allowing administrators set and lock the assumed defaults for a given cloud environment. Specifically to AWS, administrators can define the VPC, Subnet and whether or not to use Public IPs.</p><div class=\"note\">If you are interested in learning more about the Deployment Environment for AWS, hover over Public-DeploymentEnv and select <strong>Edit</strong> from the Actions dropdown. <strong>Do not make any changes!</strong></div><h3><img src=\"/uploads/2f978778-cadd-dbdb-522a-bb98b57824cd.png\" /></h3><p><img src=\"/uploads/4ad77263-b823-3d5b-fa81-d3c720d508d9.png\" /></p>",
                        "path": "viewing-the-publicdeploymentenv"
                    },
                    {
                        "name": "Creating the Private-DeploymentEnv",
                        "id": "232724792346",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Creating the Private-DeploymentEnv</h1><p><span class=\"step\">STEP 1:</span> In the main panel, click on <strong>New Environment</strong> to open the New Deployment Environment wizard. When the main panel refreshes, complete the wizard as follows. However, before proceeding, ensure both the ACI and OpenStack regions are selected, and click on the small <b>Pin</b> to set ACI as the default. Once completed, click on <strong>Define Default Cloud Settings </strong>to complete the wizard.</p><p><img src=\"/uploads/0c47afd9-3d4c-ad54-9bb6-b4a4718463ce.png\" /></p><h3>Setting the Deployment Environment Defaults</h3><p>On the next step of the wizard, students need to define the default settings for the each of the cloud environments.</p><p><span class=\"step\">STEP 2:</span> On the left-hand side of the wizard, ensure Region01 for VMware is selected. The first default is choosing the <strong>Instance Type</strong>. However, there is only one Instance Type<strong> </strong>available in the VMware Region, therefore the only choice is automatically selected.</p><p><img src=\"/uploads/91edaa5e-9ca5-4821-eb99-03ea067f26fe.png\" /></p><p><span class=\"step\">STEP 3:</span> Scroll down to the section <strong>Cloud Settings. </strong>Because the ACI Cloud Environment is based on VMware, the user is presented with various vCenter settings to configure. For each setting, the dropdown options are being automatically fetched by the CCO. Complete this section using the following screenshot for reference. <strong>Please ensure to choose the right Target Deployment Folder.</strong></p><p><img src=\"/uploads/dbde923a-8c2d-8bd0-1970-a2daa858b75a.png\" /></p><p><span class=\"step\">STEP 4:</span>The final necessary configuration is to enable the APIC Extension. As mentioned previously, the APIC Extension is used to configure the ACI fabric with the necessary constructs - such as EPGs and Bridge Domains - to allow network traffic. Click on the <strong>Use ACI Extension</strong> toggle<b> </b>and complete the wizard as pictured below. Similar to the Cloud Settings above, the dropdowns are being populated with the information being fetched directly from the APIC.</p><p><img src=\"/uploads/97d9d0b0-947e-61d8-e33e-2c7fb7980f02.png\" /></p><p><span class=\"step\">STEP 5:</span> Before moving onto the defaults for OpenStack, students can further control how these Deployment Environments are used by an end-user. For the section <strong>SSH Options</strong>, toggle the small eye icon to hide this section from future users. The toggle should read <em>Not visible to users.<strong> </strong></em></p><h3><strong>HIDE</strong> SSH Options</h3><p><img src=\"/uploads/f29ab360-b4f6-28d5-bf18-38eb4337c9b0.png\" /></p><p><span class=\"step\">STEP 6:</span> Next, scroll back up to <strong>Cloud Settings</strong> and click the small lock icon. This will prevent users from making any changes to the selected options during application deployment.</p><h3><strong>LOCK</strong> Cloud Settings</h3><p><img src=\"/uploads/8880525d-6a86-80c2-956f-0d8a36b0afc0.png\" /></p><p><span class=\"step\">STEP 7:</span> Before proceeding, the OpenStack defaults need to be selected. In the wizard, scroll to the top and select <strong>OpenStack Region01</strong> from the left-hand side. Once the main panel refreshes, the only changes necessary are in <strong>Cloud Settings. </strong>Similar to ACI Region01, this environment only has one Instance Type. Complete the wizard as shown below.</p><div class=\"important-note\">Students need to UNCHECK <b>Assign Public IP.</b> There are only enough Floating-IPs in each tenant-subnet to give HA-Proxy a Public IP. This will need to be manually configured during deployment time. Therefore, the SSH Options can be hidden, but the Cloud Settings must remain unlocked.</div><p><img src=\"/uploads/8d7a2bbf-f83a-f1ca-89d0-a5f9087e9f0f.png\" /></p><p><span class=\"step\">STEP 8:</span> Once the wizard is completed, click on <strong>Done</strong> and then <strong>Done</strong> again to complete the Deployment Environment configuration process.</p>",
                        "path": "creating-the-privatedeploymentenv"
                    },
                    {
                        "name": "System Tags and Deployment Environments",
                        "id": "660589485743",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>System Tags and Deployment Environments</h1><p>The last step in the process is to assign <strong>System Tags. </strong>As described earlier in the guide, System Tags associate objects to Governance Policies. In fact, without applying the same System Tags, applications could not be deployed to these environments - in a lot of ways, tags are used like Permissions to enable communication between two trusted policies or objects.</p><p><span class=\"step\">STEP 1:</span> Using the mouse, hover over the <strong>Public-DeploymentEnv</strong> and select <strong>Associate Rules</strong> from the Actions dropdown menu. When the pop-up window appears, click on the field <strong>Select Some Options</strong> and choose <strong>Public</strong> from the dropdown. Click on <strong>add </strong>to finish associating the tag to the Deployment Environment. Click <strong>Close </strong>to finish.<img src=\"/uploads/a490fe94-ad46-3d48-32fa-dab80b476dfe.png\" /><img src=\"/uploads/e26356b5-7adf-074c-dbb0-a65e5a15e659.png\" /></p><p><span class=\"step\">STEP 2:</span> Repeat the process with <strong>Private-DeploymentEnv</strong>, but this time, select <strong>Private</strong> from the dropdown. Click <strong>Close </strong>to finish.</p><p><img src=\"/uploads/15f2ee4f-f508-f57c-7e66-ef19c9197802.png\" /></p><div class=\"note\">The blue arrows on the left of each Deployment Environment are used to set &quot;preference&quot; for those situations where both environments use the same System Tag. For example, if we associated a System Tag called &quot;Rank&quot; to both Deployment Environments, as well as the application profile (WordPress), then upon deployment, the Public-DeploymentEnv would be automatically chosen.<img src=\"/uploads/2538f953-a639-864a-71b1-99552de764db.png\" /></div>",
                        "path": "system-tags-and-deployment-environments"
                    }
                ]
            },
            {
                "name": "Deploying Application Profiles",
                "id": "539296549820",
                "data": "",
                "path": "deploying-application-profiles",
                "children": [
                    {
                        "name": "Overview of WordPress Deployment",
                        "id": "921754820436",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Overview of WordPress Deployment</h1><p>Our environment is now ready for an application deployment. We have two Clouds, each with the necessary Cloud Accounts and Cloud Regions, and we have created Deployment Environments associating those objects together. In the next step, students will be deploying a pre-configured blueprint for <b>WordPress</b>.</p><p>WordPress is a simple 3-tier web application, which has been modeled to use a HAProxy load balancer (LB), Apache web server (APP) and a MySQL backend database (DB). Our application profile has been modeled to have WordPress spin up 2 Apache web servers, and 1 of each the load balancer and the database. In total, each WordPress deployment will have 4 VMs.</p><p>The defining feature of Cisco CloudCenter is the ability to model, securely deploy, and manage applications in any data center, private cloud, or public cloud environment while maintaining application portability. In other words, Applications Profiles enable the deployment and migration of applications without the need to modify the blueprint. The Orchestrator is a cloud-specific, multitenant orchestration platform that securely deploys both the infrastructure and the application, manages the deployment including runtime policies, and aggregates usage and cost information. The unique profile and orchestrator combination simplifies migration by deploying the profile wherever you want it to run, regardless of the starting point or how much you know about workload details. It automatically and natively installs the necessary infrastructure resources and application components.</p><p>Once the application has been deployed to ACI, OpenStack and AWS, this guide will explore the nuances behind modeling the WordPress blueprint before performing a migration.</p><h3>Workers</h3><p>In either cloud environment, application deployments will utilize a <b>CentOS Worker.</b> These virtual base images make up the underlying operating system and any operations tools required and referenced by services. Each CloudCenter version ships with several installers and scripts required to create appliances for CloudCenter components. These worker images can also be created manually. For more information, please reference the CloudCenter documentation on <a href=\"http://docs.cloudcenter.cisco.com/pages/viewpage.action?pageId=8554349\">Management Agent (Worker) Installation</a>.</p><h3>Deployment Lifecycle</h3><p>When applications are deployed using CloudCenter, they enter a <b>Deployment Lifecycle</b>. The CCM instructs the CCO to request the necessary resources from the cloud - this includes the provisioning of VMs and the creation of any necessary networking constructs. After obtaining an IP address via DHCP, applications communicate with the CCO and various repositories to bootstrap, perform updates and install application files. During this entire process, the CCO and RabbitMQ report application deployment and status back to the CCO. For more information, please reference the CloudCenter documentation on <a href=\"http://docs.cloudcenter.cisco.com/display/CCD48/Application+Lifecycle+Management\">Application Lifecycle Management</a>.</p><p class=\"text-center\"><img src=\"/uploads/ea4f6c9b-fcab-43d9-e9c9-2c41f30e647f.png\" /></p>",
                        "path": "overview-of-wordpress-deployment"
                    },
                    {
                        "name": "Deploying WordPress to ACI",
                        "id": "191496682974",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Deploying Wordpress to ACI</h1><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>App Profiles. </strong>When the main panel refreshes, click on <b>CiscoLive-Wordpress </b>to open the Deployment wizard.</p><p><img src=\"/uploads/5cca8530-89eb-dc7f-d4f9-e33fe636af69.png\" /></p><p><span class=\"step\">STEP 2:</span> Once the Deployment wizard appears, complete the section entitled <strong>General Settings. </strong>For the <strong>Deployment Name</strong>, use <strong>{{student-abbrv}}-WP-ACI</strong>. Because this deployment is destined for ACI, students should select <strong>Private</strong> from the <strong>Tags</strong> dropdown. Once the System Tag is selected, notice how the appropriate Aging Policy is automatically associated to the deployment. In addition, scroll down to the <strong>Apache</strong> tier to see the Scaling Policy which was also automatically associated to the application deployment (This will be further explained in the next section). Click <strong>NEXT</strong> to proceed.</p><p><img src=\"/uploads/1a9145f5-c6c5-cc38-c4d3-96a21a6f292b.png\" /></p><p><img src=\"/uploads/d0d91175-cb87-dd81-9261-1b58291e1c71.png\" /></p><div class=\"note\">For those interested, students are welcomed to verify both vCenter and the APIC have not been pre-configured with anything besides the aforementioned policies and objects. <strong>Once WP is deployed, students can switch back to these management portals to watch the VMs and policies be configured in real-time.</strong><p>In the APIC GUI (Tab 2), click on <strong>Tenants</strong> and then find and double-click on <strong>{{student-name}}</strong> - students may need to use the arrows on the bottom of the page to view additional objects. Once the page refreshes, click on <strong>Application Profiles</strong> and notice how &quot;nothing&quot; has been configured for WordPress. Next, click and expand <strong>Bridge Domains &gt; {{student-name}}-BD</strong> to see the previously explained Bridge Domain and DHCP-Relay policies.<img src=\"/uploads/1e53fc8f-e167-3e79-f3af-02a73f2ed961.png\" /></p><p>In vCenter (Tab 3), click on <strong>VMs and Templates</strong> in the left-hand menu bar. When the page refreshes, click on the small, black arrow to expand <strong>ACI-DC &gt; StudentVMs &gt; {{student-name}}. </strong> There should be no VMs listed.<img src=\"/uploads/670b1468-7558-1c44-b32d-e111918d9709.png\" /></p></div><p><span class=\"step\">STEP 3:</span> On the next step of the Deployment wizard, students need to select which cloud in the Private-DeploymentEnv they want to use. In this case, ensure <strong>CiscoLive_ACI Region01</strong> is selected.</p><p><img src=\"/uploads/74ecb9aa-01a6-c3a7-8ffb-6abc682beb7b.png\" /></p><p><span class=\"step\">STEP 4:</span> Scroll down to check the settings for each tier. Because the Cloud Defaults were selected in the previous section, students do not need to make any further changes - everything from the VM size to the ACI policies have been automatically configured. Click <strong>DEPLOY</strong> to start the deployment process.</p><p><img src=\"/uploads/46aecb25-d7a6-deb7-464c-93bf3897a19e.png\" /></p><p>If the deployment is successful, the main panel will refresh and display information about the application deployment in-progress. The top half of the panel will outline the deployment attributes, such as the Deployment Environment, Cloud Account and Cloud Region, and whether or not any policies were applied.</p><p><img src=\"/uploads/7e213435-a036-aa24-5361-f3869f380513.png\" /></p><p>The bottom half of the panel is dedicated to an interactive diagram that tracks the deployment as each tier of the application completes the deployment lifecycle. Clicking on an application tier will display more detailed information to the right. Most importantly, this includes the VM status, which indicates what lifecycle stage the application has reached. During a failure, this status can be used to determine where in the lifecycle the application failed.</p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Color</th><th>Description</th></tr><tr><th>Orange</th><td>This indicates that the VM deployment failed or timed-out.</td></tr><tr><th>Yellow</th><td>This indicates that the VM either still needs to be cloned and powered-on and/or request an IP address via DHCP.</td></tr><tr><th>Blinking-Green</th><td>This indicates that the VM has received an IP address and has started the bootstrap process and is installing any necessary application files.</td></tr><tr><th>Solid-Green</th><td>This indicates that the VM has successfully finished the deployment process and is running as expected.</td></tr></tbody></table></div><p><img src=\"/uploads/a0f33668-b569-4d38-e28a-90f51ec6852e.png\" /></p><div class=\"note\">Once again, for those interested, students are welcomed to verify the new configurations on both vCenter and the APIC.<p>In the APIC GUI (Tab 2), there should be a new Application Profile named <strong>{{student-abbrv}}-WP-ACI_somerandomnumber</strong>. Click on the profile name to see an overview of the network policies, including the EPGs and the contract relationships.<img src=\"/uploads/55332ba1-93d0-9947-3067-8af051fdd216.png\" /></p><p>In vCenter (Tab 3), refresh the <strong>VMs and Templates</strong> page. Within the <strong>{{student-name}}</strong> folder, there should be 4 virtual machines - 1 for the DB, 2 for Apache, and 1 for HA-Proxy.<img src=\"/uploads/27318706-dfdc-b5c5-bf56-a2e96a720614.png\" /></p></div>",
                        "path": "deploying-wordpress-to-aci"
                    },
                    {
                        "name": "Deploying WordPress to OpenStack",
                        "id": "602395426402",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Deploying Wordpress to OpenStack</h1><p>As mentioned previously, we are going to use the same Application Profile to deploy WordPress to the OpenStack environment. There will be no changes made to the application blueprint or the Deployment Environment, though users will need to instruct the CCM to use the OpenStack Cloud Account and Cloud Region instead.</p><div class=\"important\">These instructions are extremely similar to those found in the ACI section. <strong>However, there are key differences!</strong> Please review instuctions carefully to ensure a successful deployment.<p><span class=\"step\">STEP 1:</span> Once again, in the left-hand menu, click on <strong>App Profiles. </strong>When the main panel refreshes, click on <b>CiscoLive-Wordpress </b>to open the Deployment wizard.</p><p><img src=\"/uploads/5cca8530-89eb-dc7f-d4f9-e33fe636af69.png\" /></p><p><span class=\"step\">STEP 2:</span> Once the Deployment wizard appears, complete the section entitled <strong>General Settings. </strong>For the <strong>Deployment Name</strong>, use <strong>{{student-abbrv}}-WP-OS. </strong>Because this deployment is destined for OpenStack, students should once again select <strong>Private</strong> from the <strong>Tags</strong> dropdown. This will automatically associate the Aging and Scaling Policies to the application deployment. <strong>NEXT</strong> to proceed.</p><p><img src=\"/uploads/8d235edb-1a21-94dd-0fac-7923140baec2.png\" /></p><div class=\"note\">Students are welcomed to verify that the OpenStack environment has not been pre-configured with anything meaningful.<strong> Once WP is deployed, students can switch back to these portals to watch the VMs and policies be configured in real-time.</strong><p>In the Horizon GUI (Tab 4), click on <strong>Network</strong> and select <strong>Network Topology</strong> from the drop-down. Once the main panel refreshes, verify there are no active instances provisioned. There should be two networks, one internal and one external.<img src=\"/uploads/3a2d7822-63b1-1f06-18ad-dd11512f942a.png\" /></p></div><p><span class=\"step\">STEP 3:</span> On the next step of the Deployment wizard, students need to select which cloud in the Private-DeploymentEnv they want to use. In this case, ensure <strong>CiscoLive_OS Region01</strong> is selected.</p><p><img src=\"/uploads/65e93761-1b02-28e1-d4bb-cde50b02151f.png\" /></p><p>Before completing the deployment, students need ensure the HAProxy tier is assigned a <strong>Public IP address</strong>. The HA-Proxy tier needs to have a &quot;public&quot; or routable IP address for users outside of OpenStack to reach the WordPress application. By default, the OpenStack Deployment Environment is configured to NOT assign application tiers with Public IP addresses but rather just assign them an address from an private address range.</p><p><span class=\"step\">STEP 4:</span> Scroll down to <strong>haproxy</strong> and check the box <strong>Assign Public IP</strong>.</p><p><img src=\"/uploads/d35906cf-ab62-eed9-8b1b-9e9ab5d5973e.png\" /></p><p><span class=\"step\">STEP 5:</span> Click <strong>DEPLOY</strong> to start the deployment process. Once the main panel refreshes, students should be greeted with the same deployment overview information as before.</p><p><img src=\"/uploads/310e6314-0445-6964-a3d2-4f7462b9014c.png\" /></p><div class=\"note\">During the deployment, students are welcomed to verify the configuration changes being made on Horizon.<p>In the Horizon GUI (Tab 4), there should be 4 new instances configured. Students should hover over the <strong>haproxy</strong> instance and select <strong>View Instance Details</strong> to verify the instance received a public IP address.<img src=\"/uploads/2274e061-fc30-cd5d-0dba-8f3b0f807eb2.png\" /></p></div></div>",
                        "path": "deploying-wordpress-to-openstack"
                    },
                    {
                        "name": "Deploying WordPress to AWS",
                        "id": "597525510291",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Deploying Wordpress to AWS</h1><p>And finally, there is the Public Cloud, AWS. Given the similarities between the three deployments of WordPress, students are encouraged to complete this particular deployment without any help or guidance! In fact, the only major change to consider is selecting the <strong>Public</strong> System Tag instead of the Private System Tag. Besides changing the Cloud information, the Public System Tag also associates the <strong>2hr-AgingPolicy</strong> instead of the 4hr-AgingPolicy.</p><div class=\"important-note\">Because the Aging Policy for AWS is only 2 hours, it is expected for the AWS deployment of WordPress to be torn down before the lab is completed.</div><p><span class=\"step\">STEP 1:</span> Deploy WordPress to AWS. Name your deployment <strong>sXX-WP(CurrentTime)-AWS</strong>. For example, if the clock reads 11:30 AM, the name should be {{student-abbrv}}-WP1130-AWS; if the clock reads 2:30 PM, the name should be {{student-abbrv}}-WP1430-AWS.</p><p><span class=\"step\">STEP 2:</span> Once the deployment overview information appears, click on <strong>Deployments</strong> in the left-hand menu to see the 3 deployments In Progress. While the VMs are finish deploying, please proceed to the next section to learn about Application Blueprints.</p><p><img src=\"/uploads/c9424800-1375-7d51-1696-be8037d3571d.png\" /></p>",
                        "path": "deploying-wordpress-to-aws"
                    }
                ]
            },
            {
                "name": "Modeling Application Blueprints",
                "id": "542501416335",
                "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><div class=\"important-note\">If you are feeling pressed for time, please consider skipping this section and reviewing it later. While this section is extremely important for ultimately understanding how CloudCenter works, the following steps simply provide an overview and do not require any actual configuration - most of this information was covered in the presentation.</div><h1>Modeling Application Blueprints</h1><p>Application Profiles in CloudCenter are templates or blueprints that can be used to describe how applications should be deployed, configured, and managed in various cloud environments. They allow users to quickly design and onboard applications in a cloud-independent manner and enable enterprises to design their applications to be flexible and portable. The process of capturing all images, scripts, and other dependencies is called <strong>Application Modeling</strong>. This process is required to convert an existing, working application into a blueprint that can be used on multiple cloud environments. The modeling process starts with configuring your images, followed by services, and, finally, the application model.</p><p>Application Blueprints are composed of <strong>Services</strong>. If a VM deployment is required for the service, then it can be mapped to a logical VM image (ex. CentOS-6.0). The logical VM images are in turn mapped to real images on a per-cloud basis. With your required images in place, you can start setting up services. Services have an associated lifecycle framework that calls different commands at different points in the service&#39;s lifecycle. These commands can take several forms, such as bash scripts, python or Ansible playbooks. Combining these services results in a working application deployment.</p><p>However, the most important part of an Application Profile is actually what is NOT part of the modeling process &ndash; Application Profiles do not require the user to provide any cloud-specific information or to hard-wire the profile to any specific cloud infrastructure. The CCM will pass the application to the respective CCO running on the target deployment cloud, leaving the CCO to orchestrate the deployment tasks, and will then monitor and meter the deployed VMs.</p><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>App Profiles</strong>. When the main panel refreshes, hover over <strong>CiscoLive-WordPress</strong> and click on the small drop-down arrow to select <strong>View.</strong></p><p><img src=\"/uploads/ff69e612-12cc-3642-92cb-d94a53f057c2.png\" /></p><h3>Basic Information</h3><p><span class=\"step\">STEP 2:</span> When the main panel refreshes, the CCM will automatically display the <strong>Topology Modeler.</strong> Before discussing the modeler, click on <strong>Basic Information.</strong></p><p>As the name implies, the Basic Information tab contains general information about the application blueprint, such as name, version, categories and application logo.</p><div class=\"note\"><strong>Version</strong> does NOT indicate the application version. Instead, this version number is used to track changes to the Application Profile. During the deployment process, the user can indicate what version of the Application Profile they want to deploy.</div><p><img src=\"/uploads/cdc33f90-0a91-555b-f2b0-2788ff7502c8.png\" /></p><h3>Topology Modeler and Properties</h3><p><span class=\"step\">STEP 3:</span> On the top of the page, click on <strong>Topology Modeler</strong>. When the main panel refreshes, the topology modeler will once again be displayed. The topology modeler tab contains 3 major sections:</p><p><img src=\"/uploads/6590b3f8-a380-7cf8-6730-1cf1bb4f5794.png\" /></p><div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Number</th><th>Name</th><th>Description</th></tr><tr><td>1</td><td>Services</td><td>The services shown here are used to build your application. There are over 40 services include out-of-the-box! But you can create your own custom services to use too. They are organized by type and functionality. Services are added to the application profile by dragging them into the modeler; they are configured by clicking on them and setting their properties (see below).</td></tr><tr><td>2</td><td>Topology Modeler</td><td>The graphical workflow for each application. When you click on a specific tier in the graphical workflow, you see the configurable parameters and fields for that tier displayed on the right-hand side in the properties section. Each tier can be moved and placed freely, with connectors (arrows) indicating application dependencies and (blue) numbers indicating how many instances of the tier exists.</td></tr><tr><td>3</td><td>Properties</td><td>Properties are defined using service parameters to further customize and qualify application actions. Each section (ex. Service Initialization, External Initialization, etc.) represents a different stage in the application lifecycle and users can specify scripts or binaries to install, customize, configure, start, stop, upgrade each tier independently from the others.</td></tr></tbody></table></div>",
                "path": "modeling-application-blueprints"
            },
            {
                "name": "Deployment Checkpoint",
                "id": "28062952525",
                "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Deployment Checkpoint</h1><p>Before proceeding, ensure your applications have successfully finish deploying. Deployment Status can be seen by revisiting the Deployments page.</p><div class=\"important-note\">Please notify an instructor if any of your applications fail to deploy, or are still &quot;In Progress&quot; after 10 minutes.</div><p><img src=\"/uploads/a655a8f1-f98f-3ec7-b8a8-daa48b197a7c.png\" /></p>",
                "path": "deployment-checkpoint"
            },
            {
                "name": "Scaling and the Actions Library",
                "id": "811535619491",
                "data": "",
                "path": "scaling-and-the-actions-library",
                "children": [
                    {
                        "name": "Introduction to the Actions Library",
                        "id": "249737274258",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Introduction to the Actions Library</h1><p>The <strong>Actions Library</strong> enables users to create, manage, and execute actions for VM management. This framework allows administrators to define actions and execute them on different CloudCenter resources, such as virtual machines and application profiles. Actions are contextually aware, which means they only display to end users if the actions are &quot;appropriate&quot; for a given cloud and/or application state. This simplifies IT management, ensuring application owners are more efficient without requiring them to know cloud specific tools or API calls. Administrators can easily define or modify actions in a central library and expose them to users and Sub-Tenants on an as-needed basis.</p><ul><li>Post-Deployment actions can include common management tasks that leverage scripts, commands, environment specific API calls, or even API calls to other tools.</li><li>Role-based access control and context-driven policy rules guide who can use various types of actions in different Deployment Environments.</li></ul><p>In this lab, students will use the Actions Library to install <strong>Stress</strong> on one of the WordPress VMs. Stress is a tool used to impose load and stress Linux systems. In the next section of the lab, students will use Stress to force the apache tier of WordPress to &quot;scale-out&quot; based on the CPU-ScalingPolicy, which occurs automatically when CPU utilization exceeds 40%.</p><p>The following screenshots show the configuration variables of the Action <strong>Install Stress</strong>, which was shared with the Sub-Tenant from the Root-Tenant. This policy will execute the command <strong>sudo yum install -y stress</strong> directly on the VM utilizing the CloudCenter Agent.</p><p><img src=\"/uploads/77a31cc7-314e-af8a-bbf1-469fcebcb3d1.png\" /></p><p><img src=\"/uploads/a94148b7-472b-8d70-3085-1c97ec78c9b7.png\" /></p>",
                        "path": "introduction-to-the-actions-library"
                    },
                    {
                        "name": "Installing Stress with the Actions Library",
                        "id": "223956317824",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Installing Stress with the Actions Library</h1><p>The first step to testing the apache2 Scaling Policy is to install stress with the aforementioned action.</p><p><span class=\"step\">STEP 1:</span> On the Deployments page, click on the name of the ACI WordPress deployment, <strong>{{student-abbrv}}-WP-ACI</strong>. This will open the <strong>Deployment Details.</strong></p><p><img src=\"/uploads/b54d68da-feb1-2009-c7ab-398c4b8cc02a.png\" /></p><div class=\"note\">Please ensure you are installing Stress on the WordPress instance residing in <strong>ACI</strong>. Due to resource limitations, this test should not be done in OpenStack or AWS!</div><p><span class=\"step\">STEP 2:</span> Once the page refreshes, scroll down and click on the box for the <strong>apache2</strong> tier in the application model; this will populate the VM information on the right. Click on the name of the first apache2 VM to open and display the <strong>Virtual Machines</strong> window for that specific VM. The apache2 VM names are what is preceded with (running).</p><p><img src=\"/uploads/8341d194-3864-7ca1-4bd8-2741a15391ce.png\" /></p><p>Introduced in 4.8, the Virtual Machines tab grants users a fine-grained view of the virtual infrastructure, including the simplified management of applications and VMs from a single interface. Before proceeding, students are encouraged to click-around and explore the Virtual Machines tab. While the information contained in this view is similar to that found within the Deployment Details page, the power of this tab lies in the actions that can be performed directly from the CCM. For example, users can take snapshots, reboot VMs and perform Actions created in the Actions Library without needing to touch the cloud infrastructure (vCenter, APIC, Horizon, etc.) or the VM.</p><p><span class=\"step\">STEP 3:</span> On the far right side, click on <strong>INSTALL STRESS</strong> to start the installation process. When the pop-up appears, click <strong>YES.</strong> The following banner will appear to indicate the Action completed successfully and Stress was installed on the VM.</p><p><img src=\"/uploads/02551e96-ef97-4522-f3d3-20b099188d3a.png\" /></p><p><img src=\"/uploads/3e391519-58fb-76bc-3237-3c98f14fdfa2.png\" /></p>",
                        "path": "installing-stress-with-the-actions-library"
                    },
                    {
                        "name": "Using Stress to test CPU-ScalingPolicy",
                        "id": "826520024154",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Using Stress to test CPU-ScalingPolicy</h1><p><span class=\"step\">STEP 1:</span> Users can SSH directly into their VMs from the CCM. This feature is enabled by the Guacamole service running on the RabbitMQ appliance. In the Virtual Machines tab, click on <strong>SSH</strong> to start a new session in a seperate browser window.</p><div class=\"note\">If necessary, please click on <strong>ADVANCED</strong> and then <strong>Proceed to URL (unsafe)</strong> to by-pass the SSL certificate warning.</div><p><img src=\"/uploads/0ae465ea-4cea-31b6-873d-a2b0f93cfd07.png\" /></p><div class=\"note\">For those interested, students are encouraged to watch the scaling happen in real-time.<p>In vCenter (Tab 3), click on <strong>VMs and Templates</strong> in the left-hand menu bar. When the page refreshes, click on the small, black arrow to expand <strong>ACI-DC &gt; StudentVMs &gt; {{student-name}}.</strong> There should be (4) VMs listed. Using the Virtual Machines tab, identify and click on the apache VM where stress was installed. In the main panel, click on <strong>Monitor &gt; Performance &gt; Advanced.</strong> Ensure the <strong>View:</strong> drop-down is set to <strong>CPU.</strong><img src=\"/uploads/b0af11a4-59cb-1ec1-8ca4-8a1185af94cd.png\" /></p></div><p><span class=\"step\">STEP 2:</span> In the SSH window, type the following to stress 1 CPU for 120 seconds:</p><pre>[cliqruser@ACI-RTP-{{student-abbrv}}-WP-ACI-apache2]$ <strong>stress -c 1 -t 120</strong></pre><p>&nbsp;</p><p>Once the stress command is issued (1), students should expect to see several things start to happen over the course of 2-3 minutes. In vCenter, the Performance Graph will start to show spikes in CPU Utilization (2). Over an extended duration, this increase in resource requirement will trigger the CPU-ScalingPolicy, resulting in an additional apache tier being requested by the CCM (3). vCenter will clone and configure a third apache VM, providing the HA-Proxy VM with one more instance to load balance across.</p><div class=\"note\">Students may need to click the refresh button in vCenter to see timely updates in the Performance Graph and Recent Tasks. Also, in the description above, the numbers in () indicate where each step is occurring in the screenshot below.</div><p><img src=\"/uploads/50cad50e-239a-7fed-c7d1-3952f6ac788f.png\" /></p><div class=\"note\">The minimum <strong>Breach Period</strong> allowed for any Scaling Policy is 10 minutes. Because this policy exists, VMs must wait 10 minutes between each cycle of scaling. Please feel free revisit this application deployment in 10 minutes to verify one of the VMs has been terminated.</div>",
                        "path": "using-stress-to-test-cpuscalingpolicy"
                    }
                ]
            },
            {
                "name": "Migrations",
                "id": "980513882295",
                "data": "",
                "path": "migrations",
                "children": [
                    {
                        "name": "Overview of Migrations in CloudCenter",
                        "id": "69042995305",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Overview of Migrations in CloudCenter</h1><p>The same features and attributes that allow CloudCenter to manage and deploy cloud-agnostic applications, allows those same applications to be migrated to, from, and between private data centers and public clouds. This flexibility enables a powerful, hybrid IT strategy where workloads are deployed without penalty to cost or time to market. Depending on the scenario, enterprises can migrate applications to avoid vendor lock-in, meet security and compliance requirements or even share hardware utilization across private and public resources. However, unlike live migrations (vMotion), where application VMs are moved while in production, CloudCenter essentially redeploys an application before migrating and resyncing application data (think copy-paste).</p><p>Migration scripts are responsible for backing-up and preparing existing applications for redeployment. These scripts can be found in the Application Blueprint; each tier of an application has it&#39;s own set of migration scripts. For example, here is a screenshot of the migration scripts for the database tier of WordPress. The <strong>Backup Script</strong> indicates <em>WHERE</em> and <em>HOW</em> the database data will be stored before the migration, and the <strong>Restore Script</strong> outlines how to use the aforementioned backup to restore WordPress. In this lab, both scripts are utilizing a S3 bucket in AWS.</p><p><img src=\"/uploads/9bf2005d-9b0d-8416-bbc4-b3336659e972.png\" /></p><p>In this lab, students will migrate WordPress from <strong>OpenStack to AWS.</strong> Besides instructing students on <em>HOW</em> to complete a migration, this section also serves to showcase CloudCenter&#39;s ability to handle migrations between Private and Public Clouds.</p>",
                        "path": "overview-of-migrations-in-cloudcenter"
                    },
                    {
                        "name": "Preparing WordPress for Migration",
                        "id": "55663916605",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Preparing WordPress for Migration</h1><p>In preparation for migrating WordPress, students need to terminate their existing WordPress deployments in AWS due to the number of resource we allowed to be consumed. Also, in order to actually have <em>something</em> to migrate, students will need complete the WordPress installation/setup process and publish a &quot;First Post&quot;.</p><p><span class=\"step\">STEP 1:</span> In the left-hand menu, click on <strong>Deployments.</strong> In the main work pane, locate your AWS deployment. To the right of the AWS deployment that is an <strong>Actions</strong> drop-down box. Within the <strong>Actions</strong> drop-down box, click <strong>Terminate and Hide</strong>.</p><p><img src=\"/uploads/17f47faf-68cc-8863-fc26-479b1965b27c.png\" /></p><p><span class=\"step\">STEP 2:</span> When the main panel refreshes, click on the name of the OpenStack WordPress deployment, <strong>{{student-abbrv}}-WP-OS.</strong> On the Deployment Details page, click on <strong>Access CiscoLive-WordPress</strong> to open WordPress in a new tab.</p><p><img src=\"/uploads/6b51ac51-caf5-92df-c52a-92f5c38afde2.png\" /></p><p><span class=\"step\">STEP 3:</span> In the new tab, complete the WordPress installation as shown in the screenshot below and then log into WordPress.</p><p><img src=\"/uploads/fe421e38-e498-b30a-23eb-bda780181698.png\" /></p><p><span class=\"step\">STEP 4:</span> Once WordPress loads, in the left-hand menu, hover over <strong>Posts</strong> and select <strong>Add New</strong> from the pop-out tray. In the main panel, create your first post - it needs both a title and some content. Select <strong>Publish</strong> to finish the creation process and save the content. After the application is migrated from OpenStack to AWS, students will confirm this post exists in the new instance of WordPress, indicating whether or not the migration was successful.</p><p><img src=\"/uploads/aba706fe-2914-b9e6-1b82-dea0852d4512.png\" /></p><p>The instance of WordPress running in OpenStack is now ready to be migrated to AWS.</p>",
                        "path": "preparing-wordpress-for-migration"
                    },
                    {
                        "name": "Migrating WordPress from OS to AWS",
                        "id": "612663359776",
                        "data": "<style type=\"text/css\">span.step {\n    color: rgb(240, 76, 55);\n    font-weight: bold;\n}</style><h1>Migrating WordPress from OS to AWS</h1><p><span class=\"step\">STEP 1:</span> In the CCM GUI (Tab 1), click on <strong>Deployments</strong> and then select <strong>Migrate</strong> from the <strong>-Actions-</strong> drop-down next to <strong>{{student-abbrv}}-WP-OS.</strong></p><p><img src=\"/uploads/ee7d6125-c1c1-a259-aa6a-7c376b37a487.png\" /></p><p><span class=\"step\">STEP 2:</span> The Migration wizard is exactly the same as the normal Deployment Wizard. Because this application is being migrated <em>to</em> AWS, name the deployment <strong>{{student-abbrv}}-WP-OStoAWS.</strong> From the <strong>Tags</strong> down-down, select <strong>Public</strong> before clicking <strong>NEXT</strong> and <strong>DEPLOY</strong> to complete the wizard. The migration should now appear on the Deployments page.</p><p><img src=\"/uploads/f94c5303-5381-03a6-e225-be14779b795c.png\" /></p><p><img src=\"/uploads/af36365c-d0ef-03a8-0546-1e1909134f88.png\" /></p><p><span class=\"step\">STEP 3:</span> Wait until the <strong>STATUS</strong> changes from <strong>In Progress</strong> to <strong>Deployed</strong>. Once the migration is complete, click on the deployment name to open the Deployment Details page and select <strong>Access CiscoLive-WordPress</strong> to open WordPress in a new tab.</p><p><img src=\"/uploads/fcd087ef-2d51-7890-738f-94e86329b6f5.png\" /></p><p>If the migration from OpenStack to AWS was successful, students will see their <strong>&quot;Test Post&quot;</strong> in WordPress. This indicates the database successfully backed up and was restored and connected to the new instance of WordPress in AWS.</p><p><img src=\"/uploads/a5d3cd72-ca29-4fa8-ad1e-f2a3d050d1d6.png\" /></p>",
                        "path": "migrating-wordpress-from-os-to-aws"
                    }
                ]
            },
            {
                "name": "Thank You",
                "id": "941993351229",
                "data": "<h1 class=\"text-center\">Thank you for attending our lab at Cisco Live Barcelona 2018!</h1><p class=\"text-center\">We really hope you enjoyed our session, and we hope you enjoy the rest of your conference experience. Participants are welcomed to use the session&#39;s Spark Room to communicate and stay in-touch with the lab proctors.</p><h3 class=\"text-center\">Please Remember to complete your surveys!</h3><p class=\"text-center\"><img src=\"/images/SVS_Logo.png\" /></p><h1 class=\"text-center\">Visit us at the World of Solutions!</h1>",
                "path": "thank-you"
            }
        ],
        "buttons": [
            {
                "name": "Topology",
                "id": "195703619942",
                "data": "<p><img src=\"/uploads/d3021770-5fc5-6861-50e9-93c14e2e1d34.png\" /></p>",
                "description": "Topology",
                "selector": "topology",
                "icon": "devices"
            },
            {
                "name": "Connection Information",
                "selector": "connection-information",
                "description": "Connection Information",
                "icon": "ethernet",
                "id": "343993433",
                "data": "<div class=\"table-responsive\"><table class=\"table table--bordered\"><tbody><tr><th>Browser Tab</th><th>Device</th><th>IP Address</th><th>Credentials</th></tr><tr><th>1</th><td><a href=\"http://10.1.200.125\">CiscoLive-CCM</a></td><td>10.1.200.125</td><td>{{student-name}}@ciscolive.com/cisco.123/{{student-abbrv}}-SubTenant</td></tr><tr><th>2</th><td><a href=\"http://10.1.200.152\">APIC</a></td><td>10.1.200.152</td><td>{{student-name}}/cisco.123</td></tr><tr><th>3</th><td><a href=\"http://10.1.200.31\">ACI vCenter</a></td><td>10.1.200.31</td><td>student/cisco.123</td></tr><tr><th>4</th><td><a href=\"http://10.1.202.180\">OpenStack Horizon</a></td><td>10.1.202.180</td><td>{{student-name}}/cisco.123</td></tr></tbody></table></div>"
            },
            {
                "name": "MindMap",
                "id": "582025822813",
                "data": "<p class=\"text-center\"><img src=\"/uploads/4ad8813a-757f-8024-5ce4-156bc562e4e1.png\" /></p>",
                "description": "",
                "selector": "mindmap",
                "icon": "list-view"
            },
            {
                "name": "Contact Info",
                "id": "646177273591",
                "data": "<div class=\"col-lg-4 col-sm-12\"><strong>Vince Motto</strong><br />Senior Technical Leader<br />Solution Validation Services<br />vmotto@cisco.com<br /><a href=\"http://getsvs.cisco.com\">getsvs.cisco.com</a></div><div class=\"col-lg-4 col-sm-12\"><strong>Andrew Horrigan</strong><br />Consulting Engineer<br />Solution Validation Services<br />anhorrig@cisco.com<br /><a href=\"http://getsvs.cisco.com\">getsvs.cisco.com</a></div><div class=\"col-lg-4 col-sm-12\"><strong>Matt Tarkington</strong><br />Consulting Engineer<br />Solution Validation Services<br />mtarking@cisco.com<br /><a href=\"http://getsvs.cisco.com\">getsvs.cisco.com</a></div>",
                "description": "Contact Info",
                "selector": "contact-info",
                "icon": "info"
            }
        ]
    },
    (err, course) => {
        if (err) {
            console.log(err);
        }
        console.log(course);

        process.exit(0);
    }
);